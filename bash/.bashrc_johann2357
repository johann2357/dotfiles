#
# ~/.bashrc_johann2357
#

export EDITOR='vim'
export VISUAL='vim'

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

PS1='[\u@\h \W]\$ '

if [ -d "$HOME/Code/dotfiles/bin" ] ;
  then PATH="$HOME/Code/dotfiles/bin:$PATH"
fi

if [ -d "$HOME/.bin" ] ;
  then PATH="$HOME/.bin:$PATH"
fi

if [ -d "$HOME/.local/bin" ] ;
  then PATH="$HOME/.local/bin:$PATH"
fi

export HISTCONTROL=ignoreboth:erasedups
bind "set completion-ignore-case on"

### Custom Config ###
# Based from Arco ISO https://github.com/arcolinux/arcolinuxl-iso/blob/master/archiso/airootfs/etc/skel/.bashrc

## Alias list
alias ls='ls --color=auto'
alias la='ls -a'
alias ll='ls -alFh'
alias l='ls'
alias l.="ls -A | egrep '^\.'"

## Alias git
alias gst='git status'
alias gd='git diff'
alias gdw='git diff --word-diff'
alias gds='git diff --staged'
alias glg='git log --stat'
alias glgg='git log --graph'
alias gloga='git log --oneline --decorate --graph --all'

## Colorize the grep command output for ease of use (good for log files)##
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

## keyboard
alias give-me-qwerty-us="sudo localectl set-x11-keymap us"
alias give-me-dvorak-us="sudo localectl set-x11-keymap us"

## Shopt
shopt -s autocd  # change to named directory
shopt -s cdspell  # autocorrects cd misspellings
shopt -s cmdhist  # save multi-line commands in history as single line
shopt -s dotglob
shopt -s histappend  # do not overwrite history
shopt -s expand_aliases  # expand aliases

#free
alias free="free -mt"

#search content with ripgrep
alias rg="rg --sort path --hidden"

#pacman
alias pacman='pacman --color auto'

#less
alias less='less --color auto'

# # ex = EXtractor for all kinds of archives
# # usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *.deb)       ar x $1      ;;
      *.tar.xz)    tar xf $1    ;;
      *.tar.zst)   tar xf $1    ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

## PROMPT
parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1) /'
}
export PS1="\n\[\e[2m\][\t - \u@\h] \[\e[22m\]\[\e[36m\]\w/ \[\e[00m\]\[\e[1m\]\[\e[2m\]\$(parse_git_branch)\[\e[22m\] \n$ "
